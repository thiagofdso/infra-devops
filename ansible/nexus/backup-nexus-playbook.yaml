# code: language=ansible
- name: Configuração de backup do nexus
  become: true  
  gather_facts: true
  vars:
     host: all
     restore: false
     nfs_user: user
     nfs_pass: pass
  hosts: "{{ host }}"
  environment:
    http_proxy: http://servicelinux:Ab123456@10.0.1.186:8080/
    https_proxy: http://servicelinux:Ab123456@10.0.1.186:8080/
  tasks:
  - name: Instalar cifs-utils usando dnf
    ansible.builtin.dnf:
      name: cifs-utils
      state: present
  - name: Adicionar entrada de cron para backup
    ansible.builtin.cron:
      name: "Backup Nexus"
      minute: 0
      hour: 23
      job: "/opt/script/nexus_backup.sh > /tmp/backup.log 2>&1"
  - name: Adicionar entrada de cron para limpeza de logs
    ansible.builtin.cron:
      name: "Limpeza de Logs Nexus"
      minute: 0
      hour: 18
      job: "/opt/script/nexus_log_clean.sh > /tmp/cleanfiles.log 2>&1"
  - name: Criar arquivo /etc/nfs-credentials
    copy:
      content: |
        username={{ nfs_user }}
        password={{ nfs_pass }}
      dest: /etc/nfs-credentials
      mode: 0644
  - name: Adicionar ponto de montagem ao /etc/fstab
    lineinfile:
      path: /etc/fstab
      line: "//fileserver.banpara.com/publica/BackupDevops/nexus /mnt/win_share cifs rw,credentials=/etc/nfs-credentials 0 0"
      insertafter: EOF
  - name: Executar mount -a
    command: mount -a
  - name: Encontrar o arquivo .tar.gz mais recente em /mnt/win_share/
    find:
      paths: /mnt/win_share/
      patterns: "*.tar.gz"
    register: latest_tar
    when: restore | bool
    tags:
      - restore
  - name: Copiar o arquivo .tar.gz mais recente para /tmp/
    ansible.builtin.copy:
      src: "{{ latest_tar.files[-1].path | default('') }}"
      dest: "/tmp/latest_archive.tar.gz"
      remote_src: yes
    when: restore | bool
    tags:
      - restore
  - name: Descompactar o arquivo .tar.gz em /tmp/
    ansible.builtin.unarchive:
      src: "/tmp/latest_archive.tar.gz"
      dest: "/tmp/"
      remote_src: yes
    when: restore | bool
    tags:
      - restore
  - name: Parar serviço nexus
    systemd:
      name: nexus
      state: stopped
    when: restore | bool
    tags:
      - restore
  - name: Remover as pastas existentes
    ansible.builtin.file:
      path: "{{ item }}"
      state: absent
    loop:
      - /opt/nexusdata/nexus3/db/security
      - /opt/nexusdata/nexus3/db/config
      - /opt/nexusdata/nexus3/db/component
      - /opt/nexusdata/nexus3/blobs
      - /opt/nexusdata/nexus3/etc/ssl
      - /opt/nexusdata/nexus3/keystores
    when: restore | bool
    tags:
      - restore
  - name: Criar o diretório /opt/nexusdata/restore-from-backup
    ansible.builtin.file:
      path: "/opt/nexusdata/nexus3/restore-from-backup"
      state: directory
    when: restore | bool
    tags:
      - restore
  - name: Copiar as pastas blobs etc keystores e arquivos .bak
    ansible.builtin.copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      owner: nexus
      group: nexus
      mode: "{{ item.mode | default('0755') }}"
      remote_src: true
    loop:
      - { src: '/tmp/nexus3/blobs',     dest: '/opt/nexusdata/nexus3/' }
      - { src: '/tmp/upgrade/',        dest: '/opt/nexusdata/nexus3/restore-from-backup/' }
      - { src: '/tmp/nexus3/etc',   dest: '/opt/nexusdata/nexus3/' }
      - { src: '/tmp/nexus3/keystores', dest: '/opt/nexusdata/nexus3/' }
    when: restore | bool
    tags:
      - restore
  - name: Remover as pastas /tmp/blobs, /tmp/db e /tmp/etc
    ansible.builtin.file:
      path: "{{ item }}"
      state: absent
    loop:
      - '/tmp/upgrade'
      - '/tmp/nexus3'
      - '/tmp/latest_archive.tar.gz'
    when: restore | bool
    tags:
      - restore
  - name: Remover pasta /tmp/etc
    ansible.builtin.file:
      path: /tmp/etc
      state: absent
    when: restore | bool
    tags:
      - restore
  - name: Alterar owner e group de /opt/nexusdata para nexus
    ansible.builtin.file:
      path: /opt/nexusdata
      owner: nexus
      group: nexus
      recurse: yes
    when: restore | bool
    tags:
      - restore
  - name: Iniciar serviço nexus
    systemd:
      name: nexus
      daemon_reload: true
      enabled: yes
      state: started
    when: restore | bool
    tags:
      - restore
  - name: Aguardar 4 minutos
    pause:
      seconds: 240
    when: restore | bool
    tags:
      - restore
  - name: Apagar o diretório /opt/nexusdata/restore-from-backup
    ansible.builtin.file:
      path: "/opt/nexusdata/nexus3/restore-from-backup"
      state: absent
    when: restore | bool
    tags:
      - restore

